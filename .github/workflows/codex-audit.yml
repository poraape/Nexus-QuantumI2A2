name: Codex Audit & Autofix v2.2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  codex-audit:
    runs-on: ubuntu-latest

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 🧩 Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install audit dependencies
        run: |
          echo "🔧 Installing dependencies..."
          pip install ruff mypy bandit radon pip-audit
          npm install -g @lhci/cli gitleaks pa11y-ci axe-core

      - name: 📁 Ensure codex_reports directory exists
        run: |
          mkdir -p codex_reports
          echo "✅ codex_reports directory ready"

      - name: 🧮 Create or switch audit branch
        run: |
          git config --global user.name "codex-bot"
          git config --global user.email "actions@github.com"
          git fetch origin
          if git show-ref --quiet refs/heads/codex/audit-autofix; then
            git checkout codex/audit-autofix
          else
            git checkout -b codex/audit-autofix
          fi

      # === PARALLEL EXECUTION BLOCKS ===
      - name: 🔍 Backend Audit
        run: |
          echo "🚀 Running backend audit..."
          ruff check . --output-format json > codex_reports/backend_audit.json || true
          mypy . > codex_reports/backend_typing.txt || true
          radon cc . -j > codex_reports/backend_complexity.json || true

      - name: 🌐 Frontend Audit
        run: |
          echo "🚀 Running frontend audit..."
          lhci collect --config=./frontend/lhci.config.js || echo "LHCI skipped"
          gitleaks detect --source=. --report-path=codex_reports/frontend_gitleaks.json || true

      - name: 🛡️ Security Audit
        run: |
          echo "🚀 Running security audit..."
          bandit -r . -f json -o codex_reports/security_bandit.json || true
          pip-audit -r requirements.txt -f json -o codex_reports/security_pip.json || true

      - name: 🎨 UX / Accessibility Audit
        run: |
          echo "🚀 Running accessibility audit..."
          pa11y-ci || echo "pa11y-ci check skipped"
          axe . --save codex_reports/ux_accessibility.json || true

      # === AGGREGATION & REPORTING ===
      - name: 🧾 Aggregate results
        run: |
          echo "📊 Aggregating reports..."
          echo "{ \"summary\": \"Codex Audit completed successfully\", \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\" }" > codex_reports/summary.json
          ls -lh codex_reports/

      - name: 📤 Upload audit reports as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codex_reports
          path: codex_reports/
          if-no-files-found: warn
          retention-days: 14

      # === AUTOCOMMIT + PR CREATION ===
      - name: 💾 Commit and push auto-fixes
        run: |
          echo "💾 Committing audit results..."
          git add codex_reports || true
          git commit -am "[codex-audit] Automated fixes and reports $(date -u +'%Y-%m-%d')" || echo "No changes to commit"
          git push origin codex/audit-autofix --force

      - name: 🪄 Create Pull Request to main
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: codex/audit-autofix
          base: main
          title: "[Codex] Automated Audit & Autofix"
          body: |
            ✅ Codex Audit & Autofix v2.2 completed successfully.

            📊 Reports uploaded as artifacts.
            🔍 Automatic fixes committed to **codex/audit-autofix**.
            🧩 Review before merging to main.

          commit-message: "[codex-audit] apply automated fixes"
          labels: codex, audit, autofix

      # === OPTIONAL AUTO-MERGE ===
      - name: 🤖 Auto-merge PR when checks pass
        if: success()
        uses: pascalgn/automerge-action@v0.15.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_METHOD: squash
          MERGE_DELETE_BRANCH: true
