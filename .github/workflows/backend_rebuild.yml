name: 🧠 NEXUS QuantumI2A2 - Backend Rebuild & Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  build-test-rebuild:
    name: 🔧 Build, Test & Rebuild Multiagent Backend
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: "3.11"
      CACHE_DIR: ~/.cache/pip
      POSTGRES_DB: nexusdb
      POSTGRES_USER: nexus
      POSTGRES_PASSWORD: nexus123
      REDIS_URL: redis://localhost:6379/0
      BROKER_URL: amqp://guest:guest@localhost//
      TEST_MODE: true

    services:
      postgres:
        image: postgres:15
        ports: [ "5432:5432" ]
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        options: >-
          --health-cmd "pg_isready -U ${{ env.POSTGRES_USER }}" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

      redis:
        image: redis:7
        ports: [ "6379:6379" ]

      rabbitmq:
        image: rabbitmq:3-management
        ports: [ "5672:5672", "15672:15672" ]

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: ⚙️ Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: 🧠 Lint and code quality checks
        run: |
          pip install black flake8 isort
          black --check .
          flake8 --max-line-length=100 .
          isort --check-only .

      - name: 🧪 Run Unit & Integration Tests
        run: |
          pytest -v --maxfail=3 --disable-warnings --cov=app --cov-report=xml
        continue-on-error: false

      - name: 📊 Validate Agent Consistency
        run: |
          python scripts/validate_agents.py || echo "⚠️ Agent validation script not found - skipping"

      - name: 🧩 Multi-Agent End-to-End Tests
        run: |
          python scripts/test_e2e_pipeline.py || echo "⚠️ E2E pipeline test missing - skipping"

      - name: 🧰 Build Backend Artifacts
        run: |
          mkdir -p dist
          zip -r dist/backend_build_${{ github.run_number }}.zip app/ tests/ scripts/
          echo "✅ Build completed: dist/backend_build_${{ github.run_number }}.zip"

      - name: 🚀 Deploy or Save Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend_build_${{ github.run_number }}
          path: dist/backend_build_${{ github.run_number }}.zip

      - name: 🧭 Rebuild Backend (auto-validation)
        run: |
          echo "Rebuilding backend with latest code..."
          python scripts/rebuild_backend.py || echo "⚠️ No rebuild script found - ensure it’s added in scripts/"

      - name: 🧾 Generate Compliance Report
        run: |
          echo "### NEXUS QuantumI2A2 Backend CI Report" > report.md
          echo "Run ID: ${{ github.run_id }}" >> report.md
          echo "Branch: ${{ github.ref_name }}" >> report.md
          echo "Commit: ${{ github.sha }}" >> report.md
          echo "Build artifacts stored successfully." >> report.md
        continue-on-error: true

      - name: 📤 Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: backend_ci_report
          path: report.md
